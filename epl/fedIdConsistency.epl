module fedIdConsistency;

// question: is it OKAY and is it needed at all?
@Description('detect any pair of frlcontrollerLink events with the same FEDSourceId and differing (link, slot, context) triplet')
@Verbose(label='error', extraNfo='Duplicate FEDSourceId!')
select * from frlcontrollerLink match_recognize(
	partition by FEDSourceId
	measures A.linkNumber as prevLink, A.slotNumber as prevSlot, A.context as prevContext, B.slotNumber as newSlot, B.linkNumber as newLink, B.context as newContext, B.FEDSourceId as srcFedId
	pattern (A B)
	define
		B as B.FEDSourceId!=0 and (B.linkNumber!=A.linkNumber or B.context != A.context or B.slotNumber != A.slotNumber)
);


@Description('make sure that given triplet resolves to the same FEDSrcId')
create window ConfirmedFeds.std:unique(fedSrcId) as select FEDSourceId as fedSrcId from frlcontrollerLink;
create window DeniedFeds.std:unique(fedSrcId) as select * from ConfirmedFeds;
on frlcontrollerLink as a insert into ConfirmedFeds select a.FEDSourceId as fedSrcId 
	where a.FEDSourceId not in (select fedSrcId from ConfirmedFeds) and a.FEDSourceId = fedSrcId(a.context, a.slotNumber, a.linkNumber, CmsHw.FRL);
@Watched(label='Verified FED IDs')
select count(*) from ConfirmedFeds;

