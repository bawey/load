/** autogenerated EPL file **/
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'CASTOR changed state')
select b.timestamp as timestamp, a.CASTOR_STATE as stateFrom, b.CASTOR_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(CASTOR_STATE!=a.CASTOR_STATE and 
    (CASTOR_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'CSC_EFED changed state')
select b.timestamp as timestamp, a.CSC_EFED_STATE as stateFrom, b.CSC_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(CSC_EFED_STATE!=a.CSC_EFED_STATE and 
    (CSC_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'CSC changed state')
select b.timestamp as timestamp, a.CSC_STATE as stateFrom, b.CSC_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(CSC_STATE!=a.CSC_STATE and 
    (CSC_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'DAQ changed state')
select b.timestamp as timestamp, a.DAQ_STATE as stateFrom, b.DAQ_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(DAQ_STATE!=a.DAQ_STATE and 
    (DAQ_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'DQM changed state')
select b.timestamp as timestamp, a.DQM_STATE as stateFrom, b.DQM_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(DQM_STATE!=a.DQM_STATE and 
    (DQM_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'DT_EFED changed state')
select b.timestamp as timestamp, a.DT_EFED_STATE as stateFrom, b.DT_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(DT_EFED_STATE!=a.DT_EFED_STATE and 
    (DT_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'DT changed state')
select b.timestamp as timestamp, a.DT_STATE as stateFrom, b.DT_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(DT_STATE!=a.DT_STATE and 
    (DT_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'ECAL_EFED changed state')
select b.timestamp as timestamp, a.ECAL_EFED_STATE as stateFrom, b.ECAL_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(ECAL_EFED_STATE!=a.ECAL_EFED_STATE and 
    (ECAL_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'ECAL changed state')
select b.timestamp as timestamp, a.ECAL_STATE as stateFrom, b.ECAL_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(ECAL_STATE!=a.ECAL_STATE and 
    (ECAL_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'EFED changed state')
select b.timestamp as timestamp, a.EFED_STATE as stateFrom, b.EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(EFED_STATE!=a.EFED_STATE and 
    (EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'ES changed state')
select b.timestamp as timestamp, a.ES_STATE as stateFrom, b.ES_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(ES_STATE!=a.ES_STATE and 
    (ES_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'HCAL_EFED changed state')
select b.timestamp as timestamp, a.HCAL_EFED_STATE as stateFrom, b.HCAL_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(HCAL_EFED_STATE!=a.HCAL_EFED_STATE and 
    (HCAL_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'HCAL changed state')
select b.timestamp as timestamp, a.HCAL_STATE as stateFrom, b.HCAL_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(HCAL_STATE!=a.HCAL_STATE and 
    (HCAL_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'HFLUMI_DAQ changed state')
select b.timestamp as timestamp, a.HFLUMI_DAQ_STATE as stateFrom, b.HFLUMI_DAQ_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(HFLUMI_DAQ_STATE!=a.HFLUMI_DAQ_STATE and 
    (HFLUMI_DAQ_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'HFLUMI changed state')
select b.timestamp as timestamp, a.HFLUMI_STATE as stateFrom, b.HFLUMI_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(HFLUMI_STATE!=a.HFLUMI_STATE and 
    (HFLUMI_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'LTC changed state')
select b.timestamp as timestamp, a.LTC_STATE as stateFrom, b.LTC_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(LTC_STATE!=a.LTC_STATE and 
    (LTC_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'PIXEL changed state')
select b.timestamp as timestamp, a.PIXEL_STATE as stateFrom, b.PIXEL_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(PIXEL_STATE!=a.PIXEL_STATE and 
    (PIXEL_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'RPC_EFED changed state')
select b.timestamp as timestamp, a.RPC_EFED_STATE as stateFrom, b.RPC_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(RPC_EFED_STATE!=a.RPC_EFED_STATE and 
    (RPC_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'RPC changed state')
select b.timestamp as timestamp, a.RPC_STATE as stateFrom, b.RPC_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(RPC_STATE!=a.RPC_STATE and 
    (RPC_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'SCAL changed state')
select b.timestamp as timestamp, a.SCAL_STATE as stateFrom, b.SCAL_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(SCAL_STATE!=a.SCAL_STATE and 
    (SCAL_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'TRACKER_EFED changed state')
select b.timestamp as timestamp, a.TRACKER_EFED_STATE as stateFrom, b.TRACKER_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(TRACKER_EFED_STATE!=a.TRACKER_EFED_STATE and 
    (TRACKER_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'TRACKER changed state')
select b.timestamp as timestamp, a.TRACKER_STATE as stateFrom, b.TRACKER_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(TRACKER_STATE!=a.TRACKER_STATE and 
    (TRACKER_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'TRG_EFED changed state')
select b.timestamp as timestamp, a.TRG_EFED_STATE as stateFrom, b.TRG_EFED_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(TRG_EFED_STATE!=a.TRG_EFED_STATE and 
    (TRG_EFED_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
@Verbose(label='message', fields={'timestamp', 'stateFrom', 'stateTo'}, extraNfo = 'TRG changed state')
select b.timestamp as timestamp, a.TRG_STATE as stateFrom, b.TRG_STATE as stateTo from pattern[
    every (a=levelZeroFM_dynamic -> b=levelZeroFM_dynamic(TRG_STATE!=a.TRG_STATE and 
    (TRG_STATE.toUpperCase() in ('ERROR','RUNNING_DEGRADED','RUNNING_SOFT_ERROR_DETECTED','PAUSING','PAUSED','RESUMING'))
))];
